import numpy as np
from numpy. linalg import inv, det
import matplotlib.pyplot as plt
import math
import scipy
from scipy.sparse import csc_matrix
from scipy.sparse.linalg import cg

def matrix3(x,h,n,ua,ub, f):
    A = np.zeros((n, n))
    A[0][0] = 2/h**2
    A[0][1] = -1/h**2
    A[n-1][n-1] = 2/h**2
    A[n-1][n-2] = -1/h**2
    for i in range(1, n - 1):
        A[i][i - 1] = -1/(h**2)
        A[i][i] = 2/(h**2)
        A[i][i + 1] = -1/(h**2)
    B = np.zeros(n)
    B[0] = f(x[0]) + ua()/h**2
    B[n-1] = f(x[n-1])+ub()/h**2
    for i in range(1, n - 2):
        B[i] = f(x[i])
    return A,B
def matrix7(x,h,n,ua,ub, f):
    A = np.zeros((n, n))
    A[0][0] = 1
    A[n-1][n-1] = 1
    A[1][0] = (-137/180)/h**2
    A[1][1] = (49/60)/h**2
    A[1][2] = (17/12)/h**2
    A[1][3] = (-47/18)/h**2
    A[1][4] = (19/12)/h**2
    A[1][5] = (-31/60)/h**2
    A[1][6] = (13/180)/h**2
    A[2][0] = (13/180)/h**2
    A[2][1] = (-19/15)/h**2
    A[2][2] = (7/3)/h**2
    A[2][3] = (-10/9)/h**2
    A[2][4] = (-1/12)/h**2
    A[2][5] = (1/15)/h**2
    A[2][6] = (-1/90)/h**2
    A[n-3][n-1] = (87/5)/h**2
    A[n-3][n-2] = (-203/45)/h**2
    A[n-3][n-3] = (-117/4)/h**2
    A[n-3][n-4] = (254/9)/h**2
    A[n-3][n-5] = (-33/2)/h**2
    A[n-3][n-6] = (27/5)/h**2
    A[n-3][n-7] = (-137/180)/h**2
    A[n-2][n-1] = (-137/180)/h**2
    A[n-2][n-2] = (49/60)/h**2
    A[n-2][n-3] = (17/12)/h**2
    A[n-2][n-4] = (-47/18)/h**2
    A[n-2][n-5] = (19/12)/h**2
    A[n-2][n-6] = (-31/60)/h**2
    A[n-2][n-7] = (13/180)/h**2
    for i in range(3, n - 3):
        A[i][i - 3] = (-1/90)/h**2
        A[i][i-2] = (3/20)/h**2
        A[i][i - 1] = (-3/2)/h**2
        A[i][i] = (49/18)/h**2
        A[i][i+1] = (-3/2)/h**2
        A[i][i+2] = (3/20)/h**2
        A[i][i+3] = (-1/90)/h**2
    B = np.zeros(n)
    B[0] = ua()
    B[n-1] = ub()
    for i in range(1, n - 1):
        B[i] = f(x[i])
    return A,B


def matrix17(x,h,n,ua,ub, f):
    A = np.zeros((n, n))
    A[0][0] = 1
    A[1][0] = -1195757/2882880/h**2
    A[1][1] = -35236393/12612600/h**2
    A[1][2] = 475037/24024/h**2
    A[1][3] = -655217/10296/h**2
    A[1][4] = 715277/4752/h**2
    A[1][5] = -745307/2640/h**2
    A[1][6] = 30533/72/h**2
    A[1][7] = -775337/1512/h**2
    A[1][8] = 783917/1568/h**2
    A[1][9] = -49397/126/h**2
    A[1][10] = 88373/360/h**2
    A[1][11] = -799361/6600/h**2
    A[1][12] = 72967/1584/h**2
    A[1][13] = -805367/61776/h**2
    A[1][14] = 62129/24024/h**2
    A[1][15] = -809657/2522520/h**2
    A[1][16] = 811373/43243200/h**2
    A[2][0] = 811373/43243200/h**2
    A[2][1] = -991553/1351350/h**2
    A[2][2] = -1144474/4729725/h**2
    A[2][3] = 270833/38610/h**2
    A[2][4] = -451013/23760/h**2
    A[2][5] = 511073/14850/h**2
    A[2][6] = -541103/10800/h**2
    A[2][7] = 559121/9450/h**2
    A[2][8] = -571133/10080/h**2
    A[2][9] = 579713/13230/h**2
    A[2][10] = -146537/5400/h**2
    A[2][11] = 197051/14850/h**2
    A[2][12] = -595157/118800/h**2
    A[2][13] = 54403/38610/h**2
    A[2][14] = -601163/2162160/h**2
    A[2][15] = 46421/1351350/h**2
    A[2][16] = -605453/302702400/h**2
    A[3][0] = -605453/302702400/h**2
    A[3][1] = 665513/12612600/h**2
    A[3][2] = -845693/840840/h**2
    A[3][3] = 671551/600600/h**2
    A[3][4] = 124973/55440/h**2
    A[3][5] = -305153/46200/h**2
    A[3][6] = 365213/37800/h**2
    A[3][7] = -395243/35280/h**2
    A[3][8] = 413261/39200/h**2
    A[3][9] = -425273/52920/h**2
    A[3][10] = 61979/12600/h**2
    A[3][11] = -13759/5775/h**2
    A[3][12] = 49477/55440/h**2
    A[3][13] = -449297/1801800/h**2
    A[3][14] = 41143/840840/h**2
    A[3][15] = -455303/75675600/h**2
    A[3][16] = 35201/100900800/h**2
    A[4][0] = 35201/100900800/h**2
    A[4][1] = -37511/4729725/h**2
    A[4][2] = 42131/420420/h**2
    A[4][3] = -4307/3465/h**2
    A[4][4] = 540107/277200/h**2
    A[4][5] = 551/5775/h**2
    A[4][6] = -14411/6300/h**2
    A[4][7] = 19031/6615/h**2
    A[4][8] = -21341/7840/h**2
    A[4][9] = 22727/11025/h**2
    A[4][10] = -23651/18900/h**2
    A[4][11] = 3473/5775/h**2
    A[4][12] = -12403/55440/h**2
    A[4][13] = 311/5005/h**2
    A[4][14] = -25499/2102100/h**2
    A[4][15] = 2341/1576575/h**2
    A[4][16] = -1997/23284800/h**2
    A[5][0] = -1997/23284800/h**2
    A[5][1] = 27347/15135120/h**2
    A[5][2] = -29657/1513512/h**2
    A[5][3] = 34277/216216/h**2
    A[5][4] = -48137/33264/h**2
    A[5][5] = 1030829/415800/h**2
    A[5][6] = -7303/7560/h**2
    A[5][7] = -6557/10584/h**2
    A[5][8] = 11177/14112/h**2
    A[5][9] = -13487/21168/h**2
    A[5][10] = 14873/37800/h**2
    A[5][11] = -15797/83160/h**2
    A[5][12] = 2351/33264/h**2
    A[5][13] = -163/8316/h**2
    A[5][14] = 5779/1513512/h**2
    A[5][15] = -3529/7567560/h**2
    A[5][16] = 1627/60540480/h**2
    A[6][0] = 1627/60540480/h**2
    A[6][1] = -1711/3153150/h**2
    A[6][2] = 167/30576/h**2
    A[6][3] = -2047/54054/h**2
    A[6][4] = 2467/11088/h**2
    A[6][5] = -3727/2310/h**2
    A[6][6] = 8857/3150/h**2
    A[6][7] = -1313/882/h**2
    A[6][8] = 53/1568/h**2
    A[6][9] = 367/2646/h**2
    A[6][10] = -577/5040/h**2
    A[6][11] = 703/11550/h**2
    A[6][12] = -787/33264/h**2
    A[6][13] = 11/1638/h**2
    A[6][14] = -223/168168/h**2
    A[6][15] = 103/630630/h**2
    A[6][16] = -191/20180160/h**2
    A[7][0] = -191/20180160/h**2
    A[7][1] = 29/154440/h**2
    A[7][2] = -157/85800/h**2
    A[7][3] = 245/20592/h**2
    A[7][4] = -287/4752/h**2
    A[7][5] = 371/1320/h**2
    A[7][6] = -623/360/h**2
    A[7][7] = 29359/9800/h**2
    A[7][8] = -55/32/h**2
    A[7][9] = 19/72/h**2
    A[7][10] = -49/1080/h**2
    A[7][11] = 7/2640/h**2
    A[7][12] = 91/39600/h**2
    A[7][13] = -35/30888/h**2
    A[7][14] = 47/168168/h**2
    A[7][15] = -1/25740/h**2
    A[7][16] = 1/411840/h**2
    A[n-1][n-1] = 1
    A[n-8][n-1] = -191/20180160/h**2
    A[n-8][n-2] = 29/154440/h**2
    A[n-8][n-3] = -157/85800/h**2
    A[n-8][n-4] = 245/20592/h**2
    A[n-8][n-5] = -287/4752/h**2
    A[n-8][n-6] = 371/1320/h**2
    A[n-8][n-7] = -623/360/h**2
    A[n-8][n-8] = 29359/9800/h**2
    A[n-8][n-9] =  -55/32/h**2
    A[n-8][n-10] = 19/72/h**2
    A[n-8][n-11] = -49/1080/h**2
    A[n-8][n-12] = 7/2640/h**2
    A[n-8][n-13] = 91/39600/h**2
    A[n-8][n-14] = -35/30888/h**2
    A[n-8][n-15] = 47/168168/h**2
    A[n-8][n-16] = -1/25740/h**2
    A[n-8][n-17] = 1/411840/h**2
    A[n-7][n-1] = 1627/60540480/h**2
    A[n-7][n-2] = -1711/3153150/h**2
    A[n-7][n-3] = 167/30576/h**2
    A[n-7][n-4] = -2047/54054/h**2
    A[n-7][n-5] = 2467/11088/h**2
    A[n-7][n-6] = -3727/2310/h**2
    A[n-7][n-7] = 8857/3150/h**2
    A[n-7][n-8] = -1313/882/h**2
    A[n-7][n-9] = 53/1568/h**2
    A[n-7][n-10] = 367/2646/h**2
    A[n-7][n-11] = -577/5040/h**2
    A[n-7][n-12] = 703/11550/h**2
    A[n-7][n-13] = -787/33264/h**2
    A[n-7][n-14] = 11/1638/h**2
    A[n-7][n-15] = -223/168168/h**2
    A[n-7][n-16] = 103/630630/h**2
    A[n-7][n-17] = -191/20180160/h**2
    A[n-6][n-1] = -1997/23284800/h**2
    A[n-6][n-2] = 27347/15135120/h**2
    A[n-6][n-3] = -29657/1513512/h**2
    A[n-6][n-4] = 34277/216216/h**2
    A[n-6][n-5] = -48137/33264/h**2
    A[n-6][n-6] = 1030829/415800/h**2
    A[n-6][n-7] = -7303/7560/h**2
    A[n-6][n-8] = -6557/10584/h**2
    A[n-6][n-9] = 11177/14112/h**2
    A[n-6][n-10] = -13487/21168/h**2
    A[n-6][n-11] = 14873/37800/h**2
    A[n-6][n-12] = -15797/83160/h**2
    A[n-6][n-13] = 2351/33264/h**2
    A[n-6][n-14] = -163/8316/h**2
    A[n-6][n-15] = 5779/1513512/h**2
    A[n-6][n-16] = -3529/7567560/h**2
    A[n-6][n-17] = 1627/60540480/h**2
    A[n-5][n-1] = 35201/100900800/h**2
    A[n-5][n-2] = -37511/4729725/h**2
    A[n-5][n-3] = 42131/420420/h**2
    A[n-5][n-4] = -4307/3465/h**2
    A[n-5][n-5] = 540107/277200/h**2
    A[n-5][n-6] = 551/5775/h**2
    A[n-5][n-7] = -14411/6300/h**2
    A[n-5][n-8] = 19031/6615/h**2
    A[n-5][n-9] = -21341/7840/h**2
    A[n-5][n-10] = 22727/11025/h**2
    A[n-5][n-11] = -23651/18900/h**2
    A[n-5][n-12] = 3473/5775/h**2
    A[n-5][n-13] = -12403/55440/h**2
    A[n-5][n-14] = 311/5005/h**2
    A[n-5][n-15] = -25499/2102100/h**2
    A[n-5][n-16] = 2341/1576575/h**2
    A[n-5][n-17] = -1997/23284800/h**2
    A[n-4][n-1] = -605453/302702400/h**2
    A[n-4][n-2] = 665513/12612600/h**2
    A[n-4][n-3] = -845693/840840/h**2
    A[n-4][n-4] = 671551/600600/h**2
    A[n-4][n-5] = 124973/55440/h**2
    A[n-4][n-6] = -305153/46200/h**2
    A[n-4][n-7] = 365213/37800/h**2
    A[n-4][n-8] = -395243/35280/h**2
    A[n-4][n-9] = 413261/39200/h**2
    A[n-4][n-10] = -425273/52920/h**2
    A[n-4][n-11] = 61979/12600/h**2
    A[n-4][n-12] = -13759/5775/h**2
    A[n-4][n-13] = 49477/55440/h**2
    A[n-4][n-14] = -449297/1801800/h**2
    A[n-4][n-15] = 41143/840840/h**2
    A[n-4][n-16] = -455303/75675600/h**2
    A[n-4][n-17] = 35201/100900800/h**2
    A[n-3][n-1] = 811373/43243200/h**2
    A[n-3][n-2] = -991553/1351350/h**2
    A[n-3][n-3] = -1144474/4729725/h**2
    A[n-3][n-4] = 270833/38610/h**2
    A[n-3][n-5] = -451013/23760/h**2
    A[n-3][n-6] = 511073/14850/h**2
    A[n-3][n-7] = -541103/10800/h**2
    A[n-3][n-8] = 559121/9450/h**2
    A[n-3][n-9] = -571133/10080/h**2
    A[n-3][n-10] = 579713/13230/h**2
    A[n-3][n-11] = -146537/5400/h**2
    A[n-3][n-12] = 197051/14850/h**2
    A[n-3][n-13] = -595157/118800/h**2
    A[n-3][n-14] = 54403/38610/h**2
    A[n-3][n-15] = -601163/2162160/h**2
    A[n-3][n-16] = 46421/1351350/h**2
    A[n-3][n-17] = -605453/302702400/h**2
    A[n-2][n-1] = -1195757/2882880/h**2
    A[n-2][n-2] = -35236393/12612600/h**2
    A[n-2][n-3] = 475037/24024/h**2
    A[n-2][n-4] = -655217/10296/h**2
    A[n-2][n-5] = 715277/4752/h**2
    A[n-2][n-6] = -745307/2640/h**2
    A[n-2][n-7] = 30533/72/h**2
    A[n-2][n-8] = -775337/1512/h**2
    A[n-2][n-9] = 783917/1568/h**2
    A[n-2][n-10] = -49397/126/h**2
    A[n-2][n-11] = 88373/360/h**2
    A[n-2][n-12] = -799361/6600/h**2
    A[n-2][n-13] = 72967/1584/h**2
    A[n-2][n-14] = -805367/61776/h**2
    A[n-2][n-15] = 62129/24024/h**2
    A[n-2][n-16] = -809657/2522520/h**2
    A[n-2][n-17] = 811373/43243200/h**2
    for i in range(8, n - 8):
        A[i][i - 8] = 1/411840/h**2
        A[i][i-7] = -16/315315/h**2
        A[i][i - 6] = 2/3861/h**2
        A[i][i - 5] = -112/32175/h**2
        A[i][i - 4] = 7/396/h**2
        A[i][i - 3] = -112/1485/h**2
        A[i][i - 2] = 14/45/h**2
        A[i][i - 1] = -16/9/h**2
        A[i][i] = 1077749/352800/h**2
        A[i][i + 1] = -16/9/h**2
        A[i][i + 2] = 14/45/h**2
        A[i][i + 3] = -112/1485/h**2
        A[i][i + 4] = 7/396/h**2
        A[i][i + 5] = -112/32175/h**2
        A[i][i + 6] = 2/3861/h**2
        A[i][i + 7] = -16/315315/h**2
        A[i][i + 8] = 1/411840/h**2
    B = np.zeros(n)
    B[0] = ua()
    B[n-1] = ub()
    for i in range(1, n - 1):
        B[i] = f(x[i])
    return A, B
def matrix5(x,h,n,ua,ub, f):
    A = np.zeros((n, n))
    A[0][0] = 1
    A[n-1][n-1] = 1
    A[1][0] = (-11/12)/h**2
    A[1][1] = (5/3)/h**2
    A[1][2] = (-1/2)/h**2
    A[1][3] = (-1/3)/h**2
    A[1][4] = (1/12)/h**2
    A[n-2][n-1] = (-35/12)/h**2
    A[n-2][n-2] = (26/3)/h**2
    A[n-2][n-3] = (-19/2)/h**2
    A[n-2][n-4] = (14/3)/h**2
    A[n-2][n-5] = (-11/12)/h**2
    for i in range(2, n - 2):
        A[i][i-2] = (1/12)/h**2
        A[i][i - 1] = (-4/3)/h**2
        A[i][i] = (5/2)/h**2
        A[i][i+1] = (-4/3)/h**2
        A[i][i+2] = (1/12)/h**2
    B = np.zeros(n)
    B[0] = ua()
    B[n-1] = ub()
    for i in range(1, n - 1):
        B[i] = f(x[i])
    return A, B
def matrix9(x,h,n,ua,ub, f):
    A = np.zeros((n, n))
    A[0][0] = 1
    A[n-1][n-1] = 1
    A[1][0] = (-363/560)/h**2
    A[1][1] = (-8/315)/h**2
    A[1][2] = (83/20)/h**2
    A[1][3] = (-153/20)/h**2
    A[1][4] = (529/72)/h**2
    A[1][5] = (-47/10)/h**2
    A[1][6] = (39/20)/h**2
    A[1][7] = (-599/1260)/h**2
    A[1][8] = (29/560)/h**2
    A[2][0] = (29/560)/h**2
    A[2][1] = (-39/35)/h**2
    A[2][2] = (331/180)/h**2
    A[2][3] = (-1/5)/h**2
    A[2][4] = (-9/8)/h**2
    A[2][5] = (37/45)/h**2
    A[2][6] = (-7/20)/h**2
    A[2][7] = (3/35)/h**2
    A[2][8] = (-47/5040)/h**2
    A[3][0] = (-47/5040)/h**2
    A[3][1] = (19/140)/h**2
    A[3][2] = (-29/20)/h**2
    A[3][3] = (118/45)/h**2
    A[3][4] = (-11/8)/h**2
    A[3][5] = (1/20)/h**2
    A[3][6] = (7/180)/h**2
    A[3][7] = (-1/70)/h**2
    A[3][8] = (1/560)/h**2
    A[n-4][n-1] = (-47/5040)/h**2
    A[n-4][n-2] = (19/140)/h**2
    A[n-4][n-3] = (-29/20)/h**2
    A[n-4][n-4] = (118/45)/h**2
    A[n-4][n-5] = (-11/8)/h**2
    A[n-4][n-6] = (1/20)/h**2
    A[n-4][n-7] = (7/180)/h**2
    A[n-4][n-8] = (-1/70)/h**2
    A[n-4][n-9] = (1/560)/h**2
    A[n-3][n-1] = (29/560)/h**2
    A[n-3][n-2] = (-39/35)/h**2
    A[n-3][n-3] = (331/180)/h**2
    A[n-3][n-4] = (-1/5)/h**2
    A[n-3][n-5] = (-9/8)/h**2
    A[n-3][n-6] = (37/45)/h**2
    A[n-3][n-7] = (-7/20)/h**2
    A[n-3][n-8] = (3/35)/h**2
    A[n-3][n-9] = (-47/5040)/h**2
    A[n-2][n-1] = (-363/560)/h**2
    A[n-2][n-2] = (-8/315)/h**2
    A[n-2][n-3] = (83/20)/h**2
    A[n-2][n-4] = (-153/20)/h**2
    A[n-2][n-5] = (529/72)/h**2
    A[n-2][n-6] = (-47/10)/h**2
    A[n-2][n-7] = (39/20)/h**2
    A[n-2][n-8] = (-599/1260)/h**2
    A[n-2][n-9] = (29/560)/h**2
    for i in range(4, n - 4):
        A[i][i - 4] = (1/560)/h**2
        A[i][i - 3] = (-8/315)/h**2
        A[i][i-2] = (1/5)/h**2
        A[i][i - 1] = (-8/5)/h**2
        A[i][i] = (205/72)/h**2
        A[i][i+1] = (-8/5)/h**2
        A[i][i+2] = (1/5)/h**2
        A[i][i+3] = (-8/315)/h**2
        A[i][i+4] = (1/560)/h**2
    B = np.zeros(n)
    B[0] = ua()
    B[n-1] = ub()
    for i in range(1, n - 1):
        B[i] = f(x[i])
    return A, B
def matrix11(x,h,n,ua,ub, f):
    A = np.zeros((n, n))
    A[0][0] = 1
    A[n-1][n-1] = 1
    A[1][0] = (-7129/12600)/h**2
    A[1][1] = (-451/560)/h**2
    A[1][2] = (2089/280)/h**2
    A[1][3] = (-3349/210)/h**2
    A[1][4] = (3769/180)/h**2
    A[1][5] = (-3979/200)/h**2
    A[1][6] = (821/60)/h**2
    A[1][7] = (-4189/630)/h**2
    A[1][8] = (607/280)/h**2
    A[1][9] = (-2147/5040)/h**2
    A[1][10] = (481/12600)/h**2
    A[2][0] = (481/12600)/h**2
    A[2][1] = (-69/70)/h**2
    A[2][2] = (6523/5040)/h**2
    A[2][3] = (122/105)/h**2
    A[2][4] = (-67/20)/h**2
    A[2][5] = (743/225)/h**2
    A[2][6] = (-271/120)/h**2
    A[2][7] = (38/35)/h**2
    A[2][8] = (-883/2520)/h**2
    A[2][9] = (43/630)/h**2
    A[2][10] = (-17/2800)/h**2
    A[3][0] = (-17/2800)/h**2
    A[3][1] = (529/5040)/h**2
    A[3][2] = (-739/560)/h**2
    A[3][3] = (2893/1260)/h**2
    A[3][4] = (-101/120)/h**2
    A[3][5] = (-109/200)/h**2
    A[3][6] = (179/360)/h**2
    A[3][7] = (-107/420)/h**2
    A[3][8] = (47/560)/h**2
    A[3][9] = (-83/5040)/h**2
    A[3][10] = (37/25200)/h**2
    A[4][0] = (37/25200)/h**2
    A[4][1] = (-1/45)/h**2
    A[4][2] = (13/70)/h**2
    A[4][3] = (-164/105)/h**2
    A[4][4] = (1001/360)/h**2
    A[4][5] = (-38/25)/h**2
    A[4][6] = (2/15)/h**2
    A[4][7] = (4/315)/h**2
    A[4][8] = (-1/80)/h**2
    A[4][9] = (1/315)/h**2
    A[4][10] = (-1/3150)/h**2
    A[n-5][n-1] = (37/25200)/h**2
    A[n-5][n-2] = (-1/45)/h**2
    A[n-5][n-3] = (13/70)/h**2
    A[n-5][n-4] = (-164/105)/h**2
    A[n-5][n-5] = (1001/360)/h**2
    A[n-5][n-6] = (-38/25)/h**2
    A[n-5][n-7] = (2/15)/h**2
    A[n-5][n-8] = (4/315)/h**2
    A[n-5][n-9] = (-1/80)/h**2
    A[n-5][n-10] = (1/315)/h**2
    A[n-5][n-11] = (-1/3150)/h**2
    A[n-4][n-1] = (-17/2800)/h**2
    A[n-4][n-2] = (529/5040)/h**2
    A[n-4][n-3] = (-739/560)/h**2
    A[n-4][n-4] = (2893/1260)/h**2
    A[n-4][n-5] = (-101/120)/h**2
    A[n-4][n-6] = (-109/200)/h**2
    A[n-4][n-7] = (179/360)/h**2
    A[n-4][n-8] = (-107/420)/h**2
    A[n-4][n-9] = (47/560)/h**2
    A[n-4][n-10] = (-83/5040)/h**2
    A[n-4][n-11] = (37/25200)/h**2
    A[n-3][n-1] = (481/12600)/h**2
    A[n-3][n-2] = (-69/70)/h**2
    A[n-3][n-3] = (6523/5040)/h**2
    A[n-3][n-4] = (122/105)/h**2
    A[n-3][n-5] = (-67/20)/h**2
    A[n-3][n-6] = (743/225)/h**2
    A[n-3][n-7] = (-271/120)/h**2
    A[n-3][n-8] = (38/35)/h**2
    A[n-3][n-9] = (-883/2520)/h**2
    A[n-3][n-10] = (43/630)/h**2
    A[n-3][n-11] = (-17/2800)/h**2
    A[n-2][n-1] = (-7129/12600)/h**2
    A[n-2][n-2] = (-451/560)/h**2
    A[n-2][n-3] = (2089/280)/h**2
    A[n-2][n-4] = (-3349/210)/h**2
    A[n-2][n-5] = (3769/180)/h**2
    A[n-2][n-6] = (-3979/200)/h**2
    A[n-2][n-7] = (821/60)/h**2
    A[n-2][n-8] = (-4189/630)/h**2
    A[n-2][n-9] = (607/280)/h**2
    A[n-2][n-10] = (-2147/5040)/h**2
    A[n-2][n-11] = (481/12600)/h**2
    for i in range(5, n - 5):
        A[i][i-5] = (-1/3150)/h**2
        A[i][i-4] = (5/1008)/h**2
        A[i][i-3] = (-5/126)/h**2
        A[i][i-2] = (5/21)/h**2
        A[i][i-1] = (-5/3)/h**2
        A[i][i] = (5269/1800)/h**2
        A[i][i+1] = (-5/3)/h**2
        A[i][i+2] = (5/21)/h**2
        A[i][i+3] = (-5/126)/h**2
        A[i][i+4] = (5/1008)/h**2
        A[i][i+5] = (-1/3150)/h**2
    B = np.zeros(n)
    B[0] = ua()
    B[n-1] = ub()
    for i in range(1, n - 1):
        B[i] = f(x[i])
    return A, B
def matrix15(x,h,n,ua,ub, f):
    A = np.zeros((n, n))
    A[0][0] = 1
    A[n-1][n-1] = 1
    A[1][0] = (-1145993/2522520)/h**2
    A[1][1] = (-5897533/2702700)/h**2
    A[1][2] = (425273/27720)/h**2
    A[1][3] = (-605453/13860)/h**2
    A[1][4] = (665513/7560)/h**2
    A[1][5] = (-695543/5040)/h**2
    A[1][6] = (713561/4200)/h**2
    A[1][7] = (-725573/4410)/h**2
    A[1][8] = (104879/840)/h**2
    A[1][9] = (-185147/2520)/h**2
    A[1][10] = (248531/7560)/h**2
    A[1][11] = (-749597/69300)/h**2
    A[1][12] = (68443/27720)/h**2
    A[1][13] = (-755603/2162160)/h**2
    A[1][14] = (58301/2522520)/h**2
    A[2][0] = (58301/2522520)/h**2
    A[2][1] = (-72161/90090)/h**2
    A[2][2] = (101743/415800)/h**2
    A[2][3] = (16721/3465)/h**2
    A[2][4] = (-30581/2520)/h**2
    A[2][5] = (35201/1890)/h**2
    A[2][6] = (-37511/1680)/h**2
    A[2][7] = (77794/3675)/h**2
    A[2][8] = (-39821/2520)/h**2
    A[2][9] = (5783/630)/h**2
    A[2][10] = (-2561/630)/h**2
    A[2][11] = (13787/10395)/h**2
    A[2][12] = (-41669/138600)/h**2
    A[2][13] = (3811/90090)/h**2

    A[2][14] = (-42131/15135120)/h**2
    A[3][0] = (-42131/15135120)/h**2
    A[3][1] = (46751/720720)/h**2
    A[3][2] = (-60611/55440)/h**2
    A[3][3] = (114251/75600)/h**2
    A[3][4] = (5171/5040)/h**2
    A[3][5] = (-19031/5040)/h**2
    A[3][6] = (23651/5040)/h**2
    A[3][7] = (-25961/5880)/h**2
    A[3][8] = (27347/8400)/h**2
    A[3][9] = (-28271/15120)/h**2
    A[3][10] = (4133/5040)/h**2
    A[3][11] = (-14713/55440)/h**2
    A[3][12] = (9937/166320)/h**2
    A[3][13] = (-30119/3603600)/h**2
    A[3][14] = (251/458640)/h**2
    A[4][0] = (251/458640)/h**2
    A[4][1] = (-2971/270270)/h**2
    A[4][2] = (3391/27720)/h**2
    A[4][3] = (-4651/3465)/h**2
    A[4][4] = (85363/37800)/h**2
    A[4][5] = (-389/630)/h**2
    A[4][6] = (-871/840)/h**2
    A[4][7] = (2582/2205)/h**2
    A[4][8] = (-1501/1680)/h**2
    A[4][9] = (1627/3150)/h**2
    A[4][10] = (-1711/7560)/h**2
    A[4][11] = (23/315)/h**2
    A[4][12] = (-227/13860)/h**2
    A[4][13] = (617/270270)/h**2
    A[4][14] = (-1879/12612600)/h**2
    A[5][0] = (-1879/12612600)/h**2
    A[5][1] = (401/144144)/h**2
    A[5][2] = (-443/16632)/h**2
    A[5][3] = (527/2772)/h**2
    A[5][4] = (-779/504)/h**2
    A[5][5] = (51137/18900)/h**2
    A[5][6] = (-229/168)/h**2
    A[5][7] = (-23/294)/h**2
    A[5][8] = (107/504)/h**2
    A[5][9] = (-149/1008)/h**2
    A[5][10] = (871/12600)/h**2
    A[5][11] = (-191/8316)/h**2
    A[5][12] = (29/5544)/h**2
    A[5][13] = (-53/72072)/h**2
    A[5][14] = (73/1513512)/h**2
    A[6][0] = ( 73/1513512)/h**2
    A[6][1] = (-131/150150)/h**2
    A[6][2] = (29/3696)/h**2
    A[6][3] = (-101/2079)/h**2
    A[6][4] = (43/168)/h**2
    A[6][5] = (-71/42)/h**2
    A[6][6] = (37133/12600)/h**2
    A[6][7] = (-82/49)/h**2
    A[6][8] = (13/56)/h**2
    A[6][9] = (-11/378)/h**2
    A[6][10] = (-1/336)/h**2
    A[6][11] = (19/5775)/h**2
    A[6][12] = (-17/16632)/h**2
    A[6][13] = (1/6006)/h**2
    A[6][14] = (-1/84084)/h**2
    A[n-7][n-1] = (73/1513512)/h**2
    A[n-7][n-2] = (-131/150150)/h**2
    A[n-7][n-3] = (29/3696)/h**2
    A[n-7][n-4] = (-101/2079)/h**2
    A[n-7][n-5] = (43/168)/h**2
    A[n-7][n-6] = (-71/42)/h**2
    A[n-7][n-7] = (37133/12600)/h**2
    A[n-7][n-8] = (-82/49)/h**2
    A[n-7][n-9] = (13/56)/h**2
    A[n-7][n-10] = (-11/378)/h**2
    A[n-7][n-11] = (-1/336)/h**2
    A[n-7][n-12] = (19/5775)/h**2
    A[n-7][n-13] = (-17/16632)/h**2
    A[n-7][n-14] = (1/6006)/h**2
    A[n-7][n-15] = (-1/84084)/h**2
    A[n-6][n-1] = (-1879/12612600)/h**2
    A[n-6][n-2] = (401/144144)/h**2
    A[n-6][n-3] = (-443/16632)/h**2
    A[n-6][n-4] = (527/2772)/h**2
    A[n-6][n-5] = (-779/504)/h**2
    A[n-6][n-6] = (51137/18900)/h**2
    A[n-6][n-7] = (-229/168)/h**2
    A[n-6][n-8] = (-23/294)/h**2
    A[n-6][n-9] = (107/504)/h**2
    A[n-6][n-10] = (-149/1008)/h**2
    A[n-6][n-11] = (871/12600)/h**2
    A[n-6][n-12] = (-191/8316)/h**2
    A[n-6][n-13] = (29/5544)/h**2
    A[n-6][n-14] = (-53/72072)/h**2
    A[n-6][n-15] = (73/1513512)/h**2
    A[n-5][n-1] = (251/458640)/h**2
    A[n-5][n-2] = (-2971/270270)/h**2
    A[n-5][n-3] = (3391/27720)/h**2
    A[n-5][n-4] = (-4651/3465)/h**2
    A[n-5][n-5] = (85363/37800)/h**2
    A[n-5][n-6] = (-389/630)/h**2
    A[n-5][n-7] = (-871/840)/h**2
    A[n-5][n-8] = (2582/2205)/h**2
    A[n-5][n-9] = (-1501/1680)/h**2
    A[n-5][n-10] = (1627/3150)/h**2
    A[n-5][n-11] = (-1711/7560)/h**2
    A[n-5][n-12] = (23/315)/h**2
    A[n-5][n-13] = (-227/13860)/h**2
    A[n-5][n-14] = (617/270270)/h**2
    A[n-5][n-15] = (-1879/12612600)/h**2
    A[n-4][n-1] = (-42131/15135120)/h**2
    A[n-4][n-2] = (46751/720720)/h**2
    A[n-4][n-3] = (-60611/55440)/h**2
    A[n-4][n-4] = (114251/75600)/h**2
    A[n-4][n-5] = (5171/5040)/h**2
    A[n-4][n-6] = (-19031/5040)/h**2
    A[n-4][n-7] = (23651/5040)/h**2
    A[n-4][n-8] = (-25961/5880)/h**2
    A[n-4][n-9] = (27347/8400)/h**2
    A[n-4][n-10] = (-28271/15120)/h**2
    A[n-4][n-11] = (4133/5040)/h**2
    A[n-4][n-12] = (-14713/55440)/h**2
    A[n-4][n-13] = (9937/166320)/h**2
    A[n-4][n-14] = (-30119/3603600)/h**2
    A[n-4][n-15] = (251/458640)/h**2
    A[n-3][n-1] = (58301/2522520)/h**2
    A[n-3][n-2] = (-72161/90090)/h**2
    A[n-3][n-3] = (101743/415800)/h**2
    A[n-3][n-4] = (16721/3465)/h**2
    A[n-3][n-5] = (-30581/2520)/h**2
    A[n-3][n-6] = (35201/1890)/h**2
    A[n-3][n-7] = (-37511/1680)/h**2
    A[n-3][n-8] = (77794/3675)/h**2
    A[n-3][n-9] = (-39821/2520)/h**2
    A[n-3][n-10] = (5783/630)/h**2
    A[n-3][n-11] = (-2561/630)/h**2
    A[n-3][n-12] = (13787/10395)/h**2
    A[n-3][n-13] = (-41669/138600)/h**2
    A[n-3][n-14] = (3811/90090)/h**2
    A[n-3][n-15] = (-42131/15135120)/h**2
    A[n-2][n-1] = (-1145993/2522520)/h**2
    A[n-2][n-2] = (-5897533/2702700)/h**2
    A[n-2][n-3] = (425273/27720)/h**2
    A[n-2][n-4] = (-605453/13860)/h**2
    A[n-2][n-5] = (665513/7560)/h**2
    A[n-2][n-6] = (-695543/5040)/h**2
    A[n-2][n-7] = (713561/4200)/h**2
    A[n-2][n-8] = (-725573/4410)/h**2
    A[n-2][n-9] = (104879/840)/h**2
    A[n-2][n-10] = (-185147/2520)/h**2
    A[n-2][n-11] = (248531/7560)/h**2
    A[n-2][n-12] = (-749597/69300)/h**2
    A[n-2][n-13] = (68443/27720)/h**2
    A[n-2][n-14] = (-755603/2162160)/h**2
    A[n-2][n-15] = (58301/2522520)/h**2
    for i in range(7, n - 7):
        A[i][i-7] = (-1/84084)/h**2
        A[i][i-6] = (7/30888)/h**2
        A[i][i-5] = (-7/3300)/h**2
        A[i][i-4] = (7/528)/h**2
        A[i][i-3] = (-7/108)/h**2
        A[i][i-2] = (7/24)/h**2
        A[i][i-1] = (-7/4)/h**2
        A[i][i] = (266681/88200)/h**2
        A[i][i+1] = (-7/4)/h**2
        A[i][i+2] = (7/24)/h**2
        A[i][i+3] = (-7/108)/h**2
        A[i][i+4] = (7/528)/h**2
        A[i][i+5] = (-7/3300)/h**2
        A[i][i+6] = (7/30888)/h**2
        A[i][i+7] = (-1/84084)/h**2
    B = np.zeros(n)
    B[0] = ua()
    B[n-1] = ub()
    for i in range(1, n - 1):
        B[i] = f(x[i])
    return A, B


def Solve(h, a,b,ua,ub, f_n, matrix, k, mt):
    cur_x = a
    x = []
    x.append(a)
    while(cur_x < b):
        cur_x = cur_x + h
        x.append(cur_x)
    n=len(x)
    f_t, f = f_n(k)
    A,B = matrix(x, h, n, ua, ub, f)
    if mt == 17 or mt == 9 or mt == 11 or mt == 15:
        u = np.linalg.solve(A, B)
    elif mt == 3:
        u, c = scipy.sparse.linalg.cg(A, B)
    elif mt == 7 or mt == 5 :
        u, c = scipy.sparse.linalg.bicgstab(A, B)
    return u, x, n, f_t
a=0 
b=5
def ua():
    x=0 
    return 1
def ub(): 
    x=5
    return 1
def f1(x):
  return x*np.sin(10*x)
def f2(x):
  return x*np.sin(100*x)
def f3(x):
  return (x-4)*(x-5)*math.exp(3*x-9)
def f4(x):
    return np.cos(x)*(x-4)*(x-5)*math.exp(5*x-15)
def tochn1(x):
  return (x+25*x*np.sin(10*x)-25*x*np.sin(50)-x*np.cos(50)+5*np.cos(10*x)
+2495)/2500
def tochn2(x):
  return (x+250*x*np.sin(100*x)-250*x*np.sin(500)-x*np.cos(500)+
                                5*np.cos(100*x) +2499995)/2500000
def tochn3(x):
  return (math.exp(3*x)*(-3*x**2+31*x-80)-16*(x-5)+
                    27*math.exp(9))/(27*math.exp(9))
def tochn4(x):
  return  -(5*math.exp(5*x)*(845*x**2-8567*x+21589)*np.sin(x)+
        10*math.exp(5*x)*(1014*x**2-9841*x+23676)*np.cos(x)+47352*x+
         121*math.exp(25)*x*np.sin(5) +358*math.exp(25)*x*np.cos(5)
  -285610*math.exp(15)-236760)/(285610*math.exp(15))
def f_nomer(k):
    k = k-1
    f_tochn = np.array([tochn1, tochn2, tochn3, tochn4])
    f_resh = np.array([f1, f2, f3, f4])
    return f_tochn[k], f_resh[k]
def shablon(num, k):
    if num == 3:
      u_h,x1,n, f_tc= Solve(h, a,b,ua,ub, f_nomer, matrix3, k, num)
    elif num == 5:
      u_h,x1,n, f_tc= Solve(h, a,b,ua,ub, f_nomer, matrix5, k, num)
    elif num == 7:
      u_h,x1,n, f_tc= Solve(h, a,b,ua,ub, f_nomer, matrix7, k, num)
    elif num == 9:
      u_h,x1,n, f_tc= Solve(h, a,b,ua,ub, f_nomer, matrix9, k, num)

    elif num == 11:
        u_h,x1,n, f_tc= Solve(h, a,b,ua,ub, f_nomer, matrix11, k, num)
    elif num == 15:
        u_h,x1,n, f_tc= Solve(h, a,b,ua,ub, f_nomer, matrix15, k, num)
    elif num == 17:
        u_h,x1,n, f_tc= Solve(h, a,b,ua,ub, f_nomer, matrix17, k, num)
    return u_h,x1,n, f_tc
fig, axs = plt.subplots(1, 5, figsize = (30, 5))
fig2, axs2 = plt.subplots(1, 3, figsize = (20, 5))
u_a, u_h=[], []
hs, pogr = [], []
for p in range(5):
    h = 0.1/2**p
    u_h, u_a = [], []
    u_h,x1,n, f_tc= shablon(3, 1)
for i in range(n):
    u_a.append(f_tc(x1[i]))
hs.append(h)
qwe = np.max(abs(u_a-u_h))
pogr.append(qwe)
axs[p].plot(x1,  u_a, label = "Точное решение", color = "green")
axs[p].plot(x1,  u_h, label = "Приближенное решение", color = "blue")
axs[p].grid()
axs[p].legend()
if p == 0:
    axs2[0].plot(x1,  abs((u_h-u_a)), label = "Погрешность = " + str(qwe))
    axs2[0].grid()
    axs2[0].legend()
elif p==4:
    axs2[1].plot(x1,  abs((u_h-u_a)), label = "Погрешность = " + str(qwe))
    axs2[1].grid()
    axs2[1].legend()

axs2[2].plot(hs, pogr, color = "red")
axs2[2].grid()
axs2[2].legend()